frr defaults datacenter
hostname {{ ansible_hostname }}
service integrated-vtysh-config
!
{% if seg_vrfs[0] is defined %}
{% for vrf in seg_vrfs %}
{% if vrf.vni is defined %}
vrf {{ vrf.id }}
 vni {{ vrf.vni }}
exit-vrf
{% endif %}
{% if vrf.target_vrf is defined %}
vrf {{ vrf.target_vrf.id }}
 vni {{ vrf.target_vrf.vni }}
exit-vrf
{% endif %}
{% endfor %}
{% endif %}
!
router ospf
 ospf router-id {{ router_id }}
 {% for network in ospf_networks %}
 network {{ network.subnet }} area 0
 {% endfor %}
!
! BGP Configuration for L2VPN EVPN with the spines
router bgp {{ asn }}
 neighbor TO_SPINES peer-group
 neighbor TO_SPINES remote-as {{ asn }}
 neighbor TO_SPINES update-source lo
 neighbor TO_SPINES capability extended-nexthop
 {% for spine in groups['spines'] %}
 neighbor {{ hostvars[spine].router_id }} peer-group TO_SPINES
 {% endfor %}
!
 address-family ipv4 unicast
  redistribute connected
 exit-address-family
!
 address-family l2vpn evpn
  neighbor TO_SPINES activate
  advertise-all-vni
  advertise-svi-ip
 exit-address-family
!
exit
!
{% if seg_vrfs[0] is defined %}
{% for vrf in seg_vrfs %}
!
router bgp {{ asn }} vrf {{ vrf.id }}
!
 address-family ipv4 unicast
  redistribute connected
  route-target import {{ asn }}:{{ vrf.target_vrf.rt }}
  route-target export {{ asn }}:{{ vrf.rt }}
 exit-address-family
!
 address-family l2vpn evpn
  advertise ipv4 unicast
 exit-address-family
exit
{% endfor %}
!
{% endif %}